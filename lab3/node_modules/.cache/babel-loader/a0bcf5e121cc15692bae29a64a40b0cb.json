{"ast":null,"code":"var _jsxFileName = \"/home/liffert/Prog/NoRepo/FuckingWeb/lab3/src/App.js\";\nimport React, { Component } from \"react\";\nimport CalcBlock from \"./components/CalcBlock\";\nimport ChooseOperation from \"./components/ChooseOperation\";\nimport CaclOut from \"./components/CalcOut\";\nimport ConverterOut from \"./components/ConverterOut\";\nimport History from \"./components/History\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.operation = \"Calculator\";\n    this.convstate = \"Digit - binary\";\n    this.state = {\n      firstOp: \"\",\n      secondOp: \"\",\n      op: \"\",\n      result: \"\",\n      convop: \"\",\n      convresult: \"\",\n      history: \"\"\n    };\n    this.butMap = new Map();\n    this.butMap.set(\"divide\", \"/\");\n    this.butMap.set(\"pow\", \"^\");\n    this.butMap.set(\"plus\", \"+\");\n    this.butMap.set(\"minus\", \"-\");\n    this.butMap.set(\"multiple\", \"*\");\n    this.setOperation = this.setOperation.bind(this);\n    this.Click = this.Click.bind(this);\n    this.setConvOperation = this.setConvOperation.bind(this);\n  }\n\n  setOperation(e) {\n    this.operation = e.target.value;\n  }\n\n  setConvOperation(e) {\n    this.convstate = e.target.value;\n  }\n\n  setOut(e) {\n    if (this.state.op === \"\") {\n      this.setState({\n        firstOp: this.state.firstOp + e.target.id\n      });\n    } else {\n      this.setState({\n        secondOp: this.state.secondOp + e.target.id\n      });\n    }\n  }\n\n  setOutConv(e) {\n    this.setState({\n      convop: this.state.convop + e.target.id\n    });\n  }\n\n  erase() {\n    this.setState({\n      firstOp: \"\",\n      secondOp: \"\",\n      op: \"\",\n      result: \"\",\n      convop: \"\",\n      convresult: \"\",\n      history: \"\"\n    });\n  }\n\n  calculate(first, second) {\n    var result = NaN;\n\n    if (this.state.op === \"+\") {\n      result = first + second;\n    } else if (this.state.op === \"-\") {\n      result = first - second;\n    } else if (this.state.op === \"/\") {\n      if (second !== 0) {\n        result = first / second;\n      }\n    } else if (this.state.op === \"*\") {\n      result = first * second;\n    } else if (this.state.op === \"^\") {\n      result = Math.pow(first, second);\n    }\n\n    if (isNaN(result) || this.state.op === \"\") {\n      this.setState({\n        history: this.state.history + first.toString() + this.state.op + second.toString() + \"=\" + \"ERROR\\n\",\n        result: \"ERROR\"\n      });\n    } else {\n      this.setState({\n        history: this.state.history + first.toString() + this.state.op + second.toString() + \"=\" + result.toString() + \"\\n\",\n        result: result\n      });\n    }\n  }\n\n  converter(e) {\n    if (e.target.id === \"res\") {\n      var result = null;\n\n      if (this.convstate === \"Digit - binary\") {\n        result = parseInt(this.state.convop).toString(2);\n      } else {\n        result = parseInt(this.state.convop, 2).toString(10);\n      }\n\n      if (isNaN(result)) {\n        this.setState({\n          convresult: \"ERROR\",\n          convop: \"\",\n          history: this.state.history + \"ERROR\\n\"\n        });\n      } else {\n        this.setState({\n          convresult: result,\n          convop: \"\",\n          history: this.state.history + this.state.convop + \" \" + this.convstate + \" \" + result + \"\\n\"\n        });\n      }\n\n      return;\n    } else if (e.target.id === \"Erase\") {\n      this.erase();\n      return;\n    }\n\n    for (var [key, value] of this.butMap) {\n      if (e.target.id === key) {\n        return;\n      }\n    }\n\n    this.setOutConv(e);\n  }\n\n  Click(e) {\n    if (this.operation === \"Converter\") {\n      this.converter(e);\n      return;\n    }\n\n    if (e.target.id === \"res\") {\n      this.calculate(parseInt(this.state.firstOp), parseInt(this.state.secondOp));\n      this.setState({\n        firstOp: \"\",\n        secondOp: \"\",\n        op: \"\"\n      });\n      return;\n    }\n\n    if (e.target.id === \"Erase\") {\n      this.erase();\n      return;\n    }\n\n    for (var [key, value] of this.butMap) {\n      if (e.target.id === key) {\n        this.setState({\n          op: value\n        });\n        return;\n      }\n    }\n\n    this.setOut(e);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"My calculator\")), /*#__PURE__*/React.createElement(ChooseOperation, {\n      change: this.setOperation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CalcBlock, {\n      click: this.Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CaclOut, {\n      first: this.state.firstOp,\n      second: this.state.secondOp,\n      op: this.state.op,\n      result: this.state.result,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ConverterOut, {\n      operand: this.state.convop,\n      result: this.state.convresult,\n      change: this.setConvOperation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(History, {\n      history: this.state.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/liffert/Prog/NoRepo/FuckingWeb/lab3/src/App.js"],"names":["React","Component","CalcBlock","ChooseOperation","CaclOut","ConverterOut","History","App","constructor","props","operation","convstate","state","firstOp","secondOp","op","result","convop","convresult","history","butMap","Map","set","setOperation","bind","Click","setConvOperation","e","target","value","setOut","setState","id","setOutConv","erase","calculate","first","second","NaN","Math","pow","isNaN","toString","converter","parseInt","key","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CalcBlock from \"./components/CalcBlock\";\nimport ChooseOperation from \"./components/ChooseOperation\";\nimport CaclOut from \"./components/CalcOut\";\nimport ConverterOut from \"./components/ConverterOut\";\nimport History from \"./components/History\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.operation = \"Calculator\";\n    this.convstate = \"Digit - binary\";\n    this.state = ({\n      firstOp: \"\",\n      secondOp: \"\",\n      op: \"\",\n      result: \"\",\n      convop: \"\",\n      convresult: \"\",\n      history: \"\"\n    });\n\n    this.butMap = new Map();\n    this.butMap.set(\"divide\", \"/\");\n    this.butMap.set(\"pow\", \"^\");\n    this.butMap.set(\"plus\", \"+\");\n    this.butMap.set(\"minus\", \"-\");\n    this.butMap.set(\"multiple\", \"*\");\n\n    this.setOperation = this.setOperation.bind(this);\n    this.Click = this.Click.bind(this);\n    this.setConvOperation = this.setConvOperation.bind(this);\n  }\n\n  setOperation(e) {\n    this.operation = e.target.value;\n  }\n\n  setConvOperation(e){\n    this.convstate = e.target.value;\n  }\n\n\n  setOut(e) {\n    if (this.state.op === \"\") {\n      this.setState({\n        firstOp: this.state.firstOp + e.target.id,\n      });\n    }\n    else {\n      this.setState({\n        secondOp: this.state.secondOp + e.target.id,\n      });\n    }\n  }\n\n  setOutConv(e) {\n      this.setState({\n        convop: this.state.convop + e.target.id,\n      });\n  }\n\n  erase() {\n    this.setState({\n      firstOp: \"\",\n      secondOp: \"\",\n      op: \"\",\n      result: \"\",\n      convop: \"\",\n      convresult: \"\",\n      history: \"\"\n    });\n  }\n\n  calculate(first, second) {\n    var result = NaN;\n    if (this.state.op === \"+\") {\n      result = first + second;\n    }\n    else if (this.state.op === \"-\") {\n      result = first - second;\n    }\n    else if (this.state.op === \"/\") {\n      if (second !== 0) {\n        result = first / second;\n      }\n    }\n    else if (this.state.op === \"*\") {\n      result = first * second;\n    }\n    else if (this.state.op === \"^\") {\n      result = Math.pow(first, second);\n    }\n    if (isNaN(result) || this.state.op === \"\") {\n      this.setState({\n        history : this.state.history + first.toString() + this.state.op + second.toString() + \"=\" + \"ERROR\\n\",\n        result : \"ERROR\"\n      });\n    }\n    else {\n      this.setState({\n        history : this.state.history + first.toString() + this.state.op + second.toString() + \"=\" + result.toString() + \"\\n\",\n        result : result\n      });\n    }\n  }\n\n  converter(e) {\n    if (e.target.id === \"res\") {\n      var result = null;\n      if(this.convstate === \"Digit - binary\"){\n        result = parseInt(this.state.convop).toString(2);\n      }\n      else{\n        result = parseInt(this.state.convop, 2).toString(10);\n      }\n\n      if(isNaN(result)){\n        this.setState({\n          convresult : \"ERROR\",\n          convop : \"\",\n          history : this.state.history + \"ERROR\\n\"\n        });\n      }\n      else{\n        this.setState({\n          convresult : result,\n          convop : \"\",\n          history : this.state.history + this.state.convop + \" \" + this.convstate + \" \" + result + \"\\n\"\n        });\n      }\n      return;\n    }\n    else if (e.target.id === \"Erase\") {\n      this.erase();\n      return;\n    }\n    for (var [key, value] of this.butMap) {\n      if (e.target.id === key) {\n        return;\n      }\n    }\n    this.setOutConv(e);\n  }\n\n\n  Click(e) {\n    if (this.operation === \"Converter\") {\n      this.converter(e);\n      return;\n    }\n    if (e.target.id === \"res\") {\n      this.calculate(parseInt(this.state.firstOp), parseInt(this.state.secondOp));\n      this.setState({\n        firstOp: \"\",\n        secondOp: \"\",\n        op: \"\",\n      });\n      return;\n    }\n    if (e.target.id === \"Erase\") {\n      this.erase();\n      return;\n    }\n    for (var [key, value] of this.butMap) {\n      if (e.target.id === key) {\n        this.setState({\n          op: value\n        });\n        return;\n      }\n    }\n    this.setOut(e);\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"text-center\">\n          <h1>My calculator</h1>\n        </div>\n        <ChooseOperation change={this.setOperation}></ChooseOperation>\n        <div className=\"row\">\n          <div className=\"col-sm-5\">\n            <CalcBlock click={this.Click}></CalcBlock>\n          </div>\n          <div className=\"col-sm-7\">\n            <CaclOut\n              first={this.state.firstOp}\n              second={this.state.secondOp}\n              op={this.state.op}\n              result={this.state.result} />\n            <ConverterOut \n              operand={this.state.convop} \n              result={this.state.convresult}\n              change={this.setConvOperation} />\n          </div>\n          <div className=\"col-sm-12\">\n            <History history={this.state.history}></History>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}